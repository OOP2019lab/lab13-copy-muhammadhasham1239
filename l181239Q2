#include <iostream>
using namespace std;

template <typename t1>

class Pair{
t1 values[2];
public:
	Pair(t1 a,t1 b){
	values[0]=a;
	values[1]=b;
	}
	t1 getmax(){
	if(values[0]>values[1]){
	return values[0];
	}else{
	return values[1];
	}
	}
	t1 getmin();
	//friend ostream& operator<<(ostream &a,const Pair &b){
		//a<<values[0];
		//a<<endl;
		//a<<values[1];
		//a<<endl;
		//return a;
	//}
};

template <typename t1>
t1 Pair<t1>:: getmin()
{
	if(values[0]>values[1]){
	return values[0];
	}else{
	return values[1];
	}
}

int main () 
{
  Pair <double> myobject (1.012, 1.01234);
	 cout<<myobject.getmax()<<endl;
	 cout<<myobject.getmin()<<endl;
	 //cout<<myobject<<endl; // << operator in pairs should be overloaded (inline)
  return 0;
}
